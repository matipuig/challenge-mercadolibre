
version: '3.7'

services:
  backend:
    container_name: backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=16-alpine
    environment:
      - NODE_ENV=development
      - PORT=8080
      - LOGS_LEVEL=silly
      - API_KEY=unsafe_api_key
      - SSL_MUST_USE=0
      - SSL_CERT_PATH=/no-cert
      - SSL_KEY_PATH=/no-cert
    logging:
      driver: 'json-file'
      options:
        max-file: "10"
        max-size: "20m"
    networks:
      - mercadolibre
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/timezone:/etc/timezone:ro

  frontend:
    container_name: frontend
    depends_on:
      - backend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=18-alpine
        - FRONTEND_URL=https://localhost:3000
        - LANGUAGE=es
        - LOGS_LEVEL=silly
        - BACKEND_BASE_URL=http://backend:8080
        - BACKEND_API_KEY=unsafe_api_key
    logging:
      driver: 'json-file'
      options:
        max-file: "10"
        max-size: "20m"
    ports:
      - "3000:3000"
    networks:
      - mercadolibre
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/timezone:/etc/timezone:ro

  frontend_en:
    container_name: frontend_en
    restart: unless-stopped
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=18-alpine
        - FRONTEND_URL=https://localhost:3001/en
        - LANGUAGE=en
        - LOGS_LEVEL=silly
        - BACKEND_BASE_URL=http://backend:8080
        - BACKEND_API_KEY=unsafe_api_key
    logging:
      driver: 'json-file'
      options:
        max-file: "10"
        max-size: "20m"
    ports:
      - "3001:3000"
    networks:
      - mercadolibre
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/timezone:/etc/timezone:ro


networks:
  mercadolibre:
    driver: bridge